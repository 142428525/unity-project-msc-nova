//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Nova_ScreenCapturerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Nova.ScreenCapturer), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("GetGameTexture", GetGameTexture);
		L.RegFunction("SetGameTexture2D", SetGameTexture2D);
		L.RegFunction("DestroyGameTexture2D", DestroyGameTexture2D);
		L.RegFunction("GetBookmarkThumbnailTexture", GetBookmarkThumbnailTexture);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("gameTexture2D", get_gameTexture2D, set_gameTexture2D);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetGameTexture(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				UnityEngine.RenderTexture o = Nova.ScreenCapturer.GetGameTexture();
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 1)
			{
				bool arg0 = LuaDLL.luaL_checkboolean(L, 1);
				UnityEngine.RenderTexture o = Nova.ScreenCapturer.GetGameTexture(arg0);
				ToLua.Push(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Nova.ScreenCapturer.GetGameTexture");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetGameTexture2D(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Nova.ScreenCapturer obj = (Nova.ScreenCapturer)ToLua.CheckObject<Nova.ScreenCapturer>(L, 1);
			obj.SetGameTexture2D();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DestroyGameTexture2D(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Nova.ScreenCapturer obj = (Nova.ScreenCapturer)ToLua.CheckObject<Nova.ScreenCapturer>(L, 1);
			obj.DestroyGameTexture2D();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetBookmarkThumbnailTexture(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			UnityEngine.Texture2D o = Nova.ScreenCapturer.GetBookmarkThumbnailTexture();
			ToLua.PushSealed(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_gameTexture2D(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Nova.ScreenCapturer obj = (Nova.ScreenCapturer)o;
			UnityEngine.Texture2D ret = obj.gameTexture2D;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index gameTexture2D on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_gameTexture2D(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Nova.ScreenCapturer obj = (Nova.ScreenCapturer)o;
			UnityEngine.Texture2D arg0 = (UnityEngine.Texture2D)ToLua.CheckObject(L, 2, typeof(UnityEngine.Texture2D));
			obj.gameTexture2D = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index gameTexture2D on a nil value");
		}
	}
}

